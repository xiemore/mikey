<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.web.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="com.example.web.modules.User">
        <result column="id" property="id" jdbcType="INTEGER"/>
        <result column="user_name" property="user_name" jdbcType="VARCHAR"/>
        <result column="pwd" property="pwd" jdbcType="VARCHAR"/>
        <result column="ni_name" property="ni_name" jdbcType="VARCHAR"/>
        <result column="phone_number" property="phone_number" jdbcType="VARCHAR"/>
    </resultMap>
    <resultMap id="UsersWithControllerRoles" type="java.lang.String">
        <result column="permission_name" property="permission_name" jdbcType="VARCHAR"/>
    </resultMap>
    <resultMap id="UsersWithType" type="java.lang.Integer">
        <result column="roles_id" property="roles_id" jdbcType="VARCHAR"/>
    </resultMap>
    <resultMap id="UsersWithUrls" type="java.lang.String">
        <result column="url_name" property="url_name" jdbcType="VARCHAR"/>
    </resultMap>
    <resultMap id="UsersWithActions" type="com.example.web.modules.Actions">
        <result column="id" property="id" jdbcType="INTEGER"/>
        <result column="parent_id" property="parent_id" jdbcType="INTEGER"/>
        <result column="action_name" property="action_name" jdbcType="VARCHAR"/>
        <result column="url_name" property="url_name" jdbcType="VARCHAR"/>
        <result column="type" property="type" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="BaseColumnList">
        id, user_name, pwd, ni_name, phone_number,
    </sql>
    <select id="check_login" resultMap="BaseResultMap" parameterType="com.example.web.modules.User">
        select
        users.id, users.user_name, users.pwd, users.ni_name, users.phone_number, roles.role_name as type
        from
        users, users_role, roles
        where users.user_name = #{user_name} and users.id = users_role.users_id and users_role.roles_id = roles.id
    </select>
    <select id="check_user_type" resultMap="UsersWithType">
        select
        users_role.roles_id
        from
        users, users_role
        where users.user_name = #{user_name} and users.id = users_role.users_id
    </select>
    <select id="select_user_role" resultMap="UsersWithControllerRoles">
        select
        permission.permission_name
        from
        users, roles, permission, users_role, roles_permission
        where
        users.user_name = #{user_name} and users.id = users_role.users_id and users_role.roles_id = roles.id and
        roles.id = roles_permission.role_id and roles_permission.permission_id = permission.id
    </select>
    <select id="selectUrlsByUser" resultMap="UsersWithUrls">
        select
        urls.url_name
        from
        users, roles, urls, users_role, roles_url
        where
        users.user_name = #{user_name} and users.id = users_role.users_id and users_role.roles_id = roles.id and
        roles.id = roles_url.roles_id and roles_url.urls_id = urls.id and urls.url_name = #{url_name}
    </select>
    <select id="selectActionsByUser" resultMap="UsersWithActions">
        select
        urls.id, urls.parent_id, urls.action_name, urls.url_name
        from
        users, roles, urls, users_role, roles_url
        where
        users.user_name = #{user_name} and users.id = users_role.users_id and users_role.roles_id = roles.id and
        roles.id = roles_url.roles_id and roles_url.urls_id = urls.id and urls.is_child = '2' and urls.parent_id = '1'
    </select>
    <insert id="sign" parameterType="com.example.web.modules.User">
        insert into
        users
        (user_name, pwd, ni_name, phone_number)
        values
        (#{user_name}, #{pwd}, #{ni_name}, #{phone_number})
    </insert>
    <insert id="set_sign_user_role" parameterType="com.example.web.modules.User">
        insert into
        users_role
        (users_id, roles_id)
        values
        (#{users_id}, #{roles_id})
    </insert>
    <update id="change_pwd" parameterType="com.example.web.modules.User">
        update
        users
        set
        pwd = #{pwd}
        where
        user_name = #{user_name}
    </update>
</mapper>
